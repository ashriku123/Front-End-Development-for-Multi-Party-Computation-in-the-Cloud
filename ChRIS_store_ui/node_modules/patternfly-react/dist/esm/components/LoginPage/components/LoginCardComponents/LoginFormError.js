var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import Collapse from 'react-collapse';

var LoginFormError = function LoginFormError(_ref) {
  var children = _ref.children,
      show = _ref.show,
      className = _ref.className,
      props = _objectWithoutProperties(_ref, ['children', 'show', 'className']);

  return React.createElement(
    'div',
    { className: 'login-form-error ' + className },
    React.createElement(
      Collapse,
      _extends({}, props, { isOpened: show }),
      children
    )
  );
};

LoginFormError.propTypes = {
  className: PropTypes.string,
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  show: PropTypes.bool
};

LoginFormError.defaultProps = {
  className: '',
  children: null,
  show: false
};

export default LoginFormError;